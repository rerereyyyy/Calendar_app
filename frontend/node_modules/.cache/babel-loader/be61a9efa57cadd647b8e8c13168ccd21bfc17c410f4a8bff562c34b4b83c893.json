{"ast":null,"code":"var _jsxFileName = \"/Users/yoshidaren/Desktop/work/calendar_app/frontend/src/components/Calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport axios from 'axios';\nimport EventFormModal from './EventFormModal';\nimport Modal from './Modal';\nimport { deleteEvent } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false); // モーダルの開閉状態\n  const [selectedEvent, setSelectedEvent] = useState(null); // クリックされた予定の詳細\n  const [formModalOpen, setFormModalOpen] = useState(false);\n\n  // イベントをバックエンドから取得\n  useEffect(() => {\n    fetchEvents();\n  }, []);\n  const fetchEvents = async () => {\n    try {\n      const appEventsResponse = await axios.get('http://localhost:5003/api/events');\n      const appEvents = appEventsResponse.data;\n      const googleEvents = await fetchGoogleEvents();\n      setEvents([...appEvents, ...googleEvents]);\n    } catch (error) {\n      console.error('Error fetching events:', error);\n    }\n  };\n  const openFormModal = () => setFormModalOpen(true);\n  const closeFormModal = () => setFormModalOpen(false);\n\n  // 予定がクリックされたときに詳細を取得してモーダルを開く\n  const handleEventClick = clickInfo => {\n    const eventDetails = {\n      _id: clickInfo.event._def.extendedProps._id,\n      title: clickInfo.event.title,\n      start: clickInfo.event.start,\n      end: clickInfo.event.end,\n      description: clickInfo.event.extendedProps.description || \"\",\n      location: clickInfo.event.extendedProps.location || \"\"\n    };\n    console.log('Event details for modal:', eventDetails); // モーダルに渡す前に確認\n\n    setSelectedEvent(eventDetails); // eventDetails を setSelectedEvent にセット\n    setModalOpen(true); // モーダルを開く\n  };\n\n  // イベントの削除処理\n  const handleEventDelete = async () => {\n    if (!selectedEvent || !selectedEvent._id) {\n      console.error('Event details are missing or incomplete');\n      return;\n    }\n    try {\n      await deleteEvent(selectedEvent._id);\n      console.log('✅ Event deleted:', selectedEvent._id);\n\n      // 🔹 MongoDB のデータ削除が完了してからイベントリストを更新\n      setEvents(prevEvents => prevEvents.filter(event => event._id !== selectedEvent._id));\n      setModalOpen(false); // モーダルを閉じる\n    } catch (error) {\n      console.error('❌ Error deleting event:', error);\n    }\n  };\n\n  // Googleの予定を取得する関数\n  const fetchGoogleEvents = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5003/api/google/get-events\", {\n        credentials: \"include\"\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const googleEvents = await response.json();\n      return googleEvents.map(event => ({\n        _id: event.id,\n        title: event.summary,\n        start: event.start.dateTime || event.start.date,\n        end: event.end.dateTime || event.end.date,\n        description: event.description || \"\",\n        location: event.location || \"\",\n        googleEvent: true\n      }));\n    } catch (error) {\n      console.error(\"Error fetching Google Calendar events:\", error);\n      return [];\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => window.location.href = \"http://localhost:5003/api/auth/google\",\n      children: \"Google\\u30AB\\u30EC\\u30F3\\u30C0\\u30FC\\u3068\\u9023\\u643A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-event-button\",\n      onClick: openFormModal,\n      children: \"\\u4E88\\u5B9A\\u3092\\u8FFD\\u52A0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin, interactionPlugin],\n      initialView: \"dayGridMonth\",\n      events: events,\n      eventClick: handleEventClick,\n      eventContent: eventInfo => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: eventInfo.event.extendedProps.googleEvent ? 'blue' : 'black'\n        },\n        children: eventInfo.event.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }, this), formModalOpen && /*#__PURE__*/_jsxDEV(EventFormModal, {\n      onClose: closeFormModal,\n      fetchEvents: fetchEvents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 23\n    }, this), modalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalOpen,\n      eventDetails: selectedEvent,\n      onClose: () => setModalOpen(false),\n      onDelete: handleEventDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 3\n  }, this);\n};\n_s(Calendar, \"IMnNFIi43iT84dmLPxd2V3MeDjE=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","useEffect","FullCalendar","dayGridPlugin","interactionPlugin","axios","EventFormModal","Modal","deleteEvent","jsxDEV","_jsxDEV","Calendar","_s","events","setEvents","modalOpen","setModalOpen","selectedEvent","setSelectedEvent","formModalOpen","setFormModalOpen","fetchEvents","appEventsResponse","get","appEvents","data","googleEvents","fetchGoogleEvents","error","console","openFormModal","closeFormModal","handleEventClick","clickInfo","eventDetails","_id","event","_def","extendedProps","title","start","end","description","location","log","handleEventDelete","prevEvents","filter","response","fetch","credentials","ok","Error","status","json","map","id","summary","dateTime","date","googleEvent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","href","plugins","initialView","eventClick","eventContent","eventInfo","style","color","onClose","isOpen","onDelete","_c","$RefreshReg$"],"sources":["/Users/yoshidaren/Desktop/work/calendar_app/frontend/src/components/Calendar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport axios from 'axios';\nimport EventFormModal from './EventFormModal';\nimport Modal from './Modal'\nimport { deleteEvent } from '../api';\n\nconst Calendar = () => {\n  const [events, setEvents] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false); // モーダルの開閉状態\n  const [selectedEvent, setSelectedEvent] = useState(null); // クリックされた予定の詳細\n  const [formModalOpen, setFormModalOpen] = useState(false);\n\n  // イベントをバックエンドから取得\n  useEffect(() => {\n    fetchEvents();\n  }, []);\n\n  const fetchEvents = async () => {\n    try {\n      const appEventsResponse = await axios.get('http://localhost:5003/api/events');\n      const appEvents = appEventsResponse.data;\n      const googleEvents = await fetchGoogleEvents();\n\n      setEvents([...appEvents, ...googleEvents]);\n    } catch (error) {\n      console.error('Error fetching events:', error);\n    }\n  };\n\n  const openFormModal = () => setFormModalOpen(true);\n  const closeFormModal = () => setFormModalOpen(false);\n\n  // 予定がクリックされたときに詳細を取得してモーダルを開く\n  const handleEventClick = (clickInfo) => {\n    const eventDetails = {\n      _id: clickInfo.event._def.extendedProps._id,\n      title: clickInfo.event.title,\n      start: clickInfo.event.start,\n      end: clickInfo.event.end,\n      description: clickInfo.event.extendedProps.description || \"\",\n      location: clickInfo.event.extendedProps.location || \"\",\n    };\n\n    console.log('Event details for modal:', eventDetails); // モーダルに渡す前に確認\n\n    setSelectedEvent(eventDetails);  // eventDetails を setSelectedEvent にセット\n    setModalOpen(true);  // モーダルを開く\n  };\n\n  // イベントの削除処理\n  const handleEventDelete = async () => {\n    if (!selectedEvent || !selectedEvent._id) {\n      console.error('Event details are missing or incomplete');\n      return;\n    }\n\n    try {\n      await deleteEvent(selectedEvent._id);\n      console.log('✅ Event deleted:', selectedEvent._id);\n\n      // 🔹 MongoDB のデータ削除が完了してからイベントリストを更新\n      setEvents(prevEvents => prevEvents.filter(event => event._id !== selectedEvent._id));\n\n      setModalOpen(false); // モーダルを閉じる\n    } catch (error) {\n      console.error('❌ Error deleting event:', error);\n    }\n};\n\n// Googleの予定を取得する関数\nconst fetchGoogleEvents = async () => {\n  try {\n    const response = await fetch(\"http://localhost:5003/api/google/get-events\", { credentials: \"include\" });\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    \n    const googleEvents = await response.json();\n\n    return googleEvents.map(event => ({\n      _id: event.id,\n      title: event.summary,\n      start: event.start.dateTime || event.start.date,\n      end: event.end.dateTime || event.end.date,\n      description: event.description || \"\",\n      location: event.location || \"\",\n      googleEvent: true,\n    }));\n  } catch (error) {\n    console.error(\"Error fetching Google Calendar events:\", error);\n    return [];\n  }\n};\n\n\n\nreturn (\n  <div className=\"calendar-container\">\n    <h2>My Calendar</h2>\n\n    <button onClick={() => window.location.href = \"http://localhost:5003/api/auth/google\"}>\n        Googleカレンダーと連携\n      </button>\n    \n    {/* 予定を追加ボタン */}\n    <button className=\"add-event-button\" onClick={openFormModal}>予定を追加</button>\n\n    <FullCalendar \n      plugins={[dayGridPlugin, interactionPlugin]}\n      initialView=\"dayGridMonth\"\n      events={events}\n      eventClick={handleEventClick}\n      eventContent={(eventInfo) => (\n        <div style={{ color: eventInfo.event.extendedProps.googleEvent ? 'blue' : 'black' }}>\n          {eventInfo.event.title}\n        </div>\n      )}\n    />\n\n    {/* 予定追加モーダル */}\n    {formModalOpen && <EventFormModal onClose={closeFormModal} fetchEvents={fetchEvents} />}\n\n    {/* 予定詳細モーダル */}\n    {modalOpen && (\n      <Modal \n        isOpen={modalOpen}\n        eventDetails={selectedEvent}\n        onClose={() => setModalOpen(false)}\n        onDelete={handleEventDelete}\n      />\n    )}\n  </div>\n);\n};\n\nexport default Calendar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}