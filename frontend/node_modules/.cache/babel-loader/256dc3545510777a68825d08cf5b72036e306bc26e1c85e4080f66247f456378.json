{"ast":null,"code":"var _jsxFileName = \"/Users/yoshidaren/Desktop/work/calendar_app/frontend/src/components/Calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport axios from 'axios';\nimport EventForm from './EventForm';\nimport Modal from './Modal';\nimport { deleteEvent } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false); // モーダルの開閉状態\n  const [selectedEvent, setSelectedEvent] = useState(null); // クリックされた予定の詳細\n\n  // イベントをバックエンドから取得\n  useEffect(() => {\n    fetchEvents();\n  }, []);\n  const fetchEvents = async () => {\n    try {\n      const response = await axios.get('http://localhost:5001/api/events');\n      setEvents(response.data);\n    } catch (error) {\n      console.error('Error fetching events:', error);\n    }\n  };\n\n  // 日付クリック時の処理（予定を追加）\n  const handleDateClick = async arg => {\n    if (modalOpen) {\n      return;\n    } else {\n      const eventTitle = prompt('予定を入力してください');\n      if (!eventTitle) return;\n    }\n    const newEvent = {\n      title: eventTitle,\n      start: arg.dateStr,\n      end: arg.dateStr,\n      description: '',\n      location: ''\n    };\n    try {\n      const response = await axios.post('http://localhost:5001/api/events', newEvent);\n      console.log(\"追加されたイベント:\", response.data); // デバッグ用\n      setEvents([...events, response.data]); // 追加されたイベントを反映\n    } catch (error) {\n      console.error('Error adding event:', error);\n    }\n  };\n\n  // 予定がクリックされたときに詳細を取得してモーダルを開く\n  const handleEventClick = clickInfo => {\n    setSelectedEvent(clickInfo.event); // クリックされた時のイベントの詳細\n    setModalOpen(true); // モーダルを開く\n  };\n\n  // モーダルを閉じる処理\n  const closeModal = () => {\n    setModalOpen(false); // モーダルを閉じる\n  };\n\n  // イベントの削除処理\n  const handleDeleteEvent = async eventId => {\n    try {\n      // バックエンドに削除リクエストを送信\n      //await axios.delete(`http://localhost:5001/api/events/${eventId}`);\n\n      await deleteEvent(eventId);\n\n      // ローカルのイベントリストから削除\n      setEvents(events.filter(event => event._id !== eventId));\n    } catch (error) {\n      console.error('Error deleting event:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventForm, {\n      fetchEvents: fetchEvents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin, interactionPlugin],\n      initialView: \"dayGridMonth\",\n      events: events,\n      dateClick: handleDateClick,\n      eventClick: handleEventClick // イベントクリック時の処理\n      ,\n      eventTimeFormat: {\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: false\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalOpen,\n      eventDetails: selectedEvent || {} // モーダルに渡すイベントの詳細\n      ,\n      onClose: closeModal // モーダルを閉じる関数\n      ,\n      onDelete: handleDeleteEvent // 削除関数を渡す\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(Calendar, \"H0KUGkncTVpEnzlSWxSKUuMhLuc=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","useEffect","FullCalendar","dayGridPlugin","interactionPlugin","axios","EventForm","Modal","deleteEvent","jsxDEV","_jsxDEV","Calendar","_s","events","setEvents","modalOpen","setModalOpen","selectedEvent","setSelectedEvent","fetchEvents","response","get","data","error","console","handleDateClick","arg","eventTitle","prompt","newEvent","title","start","dateStr","end","description","location","post","log","handleEventClick","clickInfo","event","closeModal","handleDeleteEvent","eventId","filter","_id","children","fileName","_jsxFileName","lineNumber","columnNumber","plugins","initialView","dateClick","eventClick","eventTimeFormat","hour","minute","hour12","isOpen","eventDetails","onClose","onDelete","_c","$RefreshReg$"],"sources":["/Users/yoshidaren/Desktop/work/calendar_app/frontend/src/components/Calendar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport axios from 'axios';\nimport EventForm from './EventForm';\nimport Modal from './Modal'\nimport { deleteEvent } from '../api';\n\nconst Calendar = () => {\n  const [events, setEvents] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false); // モーダルの開閉状態\n  const [selectedEvent, setSelectedEvent] = useState(null); // クリックされた予定の詳細\n\n  // イベントをバックエンドから取得\n  useEffect(() => {\n    fetchEvents();\n  }, []);\n\n  const fetchEvents = async () => {\n    try {\n      const response = await axios.get('http://localhost:5001/api/events');\n      setEvents(response.data);\n    } catch (error) {\n      console.error('Error fetching events:', error);\n    }\n  };\n\n  // 日付クリック時の処理（予定を追加）\n  const handleDateClick = async (arg) => {\n    if (modalOpen){\n      return;\n    } else {\n      const eventTitle = prompt('予定を入力してください');\n      if (!eventTitle) return;\n    }\n\n    const newEvent = {\n      title: eventTitle,\n      start: arg.dateStr,\n      end: arg.dateStr,\n      description: '',\n      location: '',\n    };\n\n    try {\n      const response = await axios.post('http://localhost:5001/api/events', newEvent);\n      console.log(\"追加されたイベント:\", response.data); // デバッグ用\n      setEvents([...events, response.data]); // 追加されたイベントを反映\n    } catch (error) {\n      console.error('Error adding event:', error);\n    }\n  };\n\n  // 予定がクリックされたときに詳細を取得してモーダルを開く\n  const handleEventClick = (clickInfo) => {\n    setSelectedEvent(clickInfo.event); // クリックされた時のイベントの詳細\n    setModalOpen(true); // モーダルを開く\n  };\n\n  // モーダルを閉じる処理\n  const closeModal = () => {\n    setModalOpen(false); // モーダルを閉じる\n  };\n\n  // イベントの削除処理\n  const handleDeleteEvent = async (eventId) => {\n    try {\n      // バックエンドに削除リクエストを送信\n      //await axios.delete(`http://localhost:5001/api/events/${eventId}`);\n\n      await deleteEvent(eventId);\n\n      // ローカルのイベントリストから削除\n      setEvents(events.filter(event => event._id !== eventId));\n    } catch (error) {\n      console.error('Error deleting event:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>My Calendar</h2>\n      {/* 予定追加フォーム */}\n      <EventForm fetchEvents={fetchEvents} />\n\n      <FullCalendar \n        plugins={[dayGridPlugin, interactionPlugin]}\n        initialView=\"dayGridMonth\"\n        events={events}\n        dateClick={handleDateClick}\n        eventClick={handleEventClick}  // イベントクリック時の処理\n        eventTimeFormat={{\n          hour: '2-digit',\n          minute: '2-digit',\n          hour12: false\n        }}\n      />\n\n      {/* モーダルを表示 */}\n      <Modal \n        isOpen={modalOpen}\n        eventDetails={selectedEvent || {}} // モーダルに渡すイベントの詳細\n        onClose={closeModal} // モーダルを閉じる関数\n        onDelete={handleDeleteEvent} // 削除関数を渡す\n      />\n    </div>\n  );\n};\n\nexport default Calendar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}