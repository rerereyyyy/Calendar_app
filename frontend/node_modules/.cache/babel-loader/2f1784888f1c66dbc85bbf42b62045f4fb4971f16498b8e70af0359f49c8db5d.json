{"ast":null,"code":"var _jsxFileName = \"/Users/yoshidaren/Desktop/work/calendar_app/frontend/src/components/Calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n\n  // イベントをバックエンドから取得\n  useEffect(() => {\n    fetchEvents();\n  }, []);\n  const frtchEvents = async () => {\n    try {\n      const response = await axios.get('http://localhost:5001/api/events');\n      setEvents(response.data);\n    } catch (error) {\n      console.error('Error fetching events:', error);\n    }\n  };\n\n  // 日付クリック時の処理（予定を追加）\n  const handleDateClick = async arg => {\n    const eventTitle = prompt('予定を入力してください');\n    if (!eventTitle) return;\n    const newEvent = {\n      title: eventTitle,\n      start: arg.dateStr,\n      end: arg.dateStr,\n      description: '',\n      location: ''\n    };\n    try {\n      const response = await axios.post('http://localhost:5001/api/events', newEvent);\n      setEvents([...events, response.data]); // 追加されたイベントを反映\n    } catch (error) {\n      console.error('Error adding event:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin, interactionPlugin],\n      initialView: \"dayGridMonth\",\n      events: events,\n      dateClick: handleDateClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Calendar, \"j18ueuia/psAZ/XawE3UyqzOWsE=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","useEffect","FullCalendar","dayGridPlugin","interactionPlugin","axios","jsxDEV","_jsxDEV","Calendar","_s","events","setEvents","fetchEvents","frtchEvents","response","get","data","error","console","handleDateClick","arg","eventTitle","prompt","newEvent","title","start","dateStr","end","description","location","post","children","fileName","_jsxFileName","lineNumber","columnNumber","plugins","initialView","dateClick","_c","$RefreshReg$"],"sources":["/Users/yoshidaren/Desktop/work/calendar_app/frontend/src/components/Calendar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport axios from 'axios';\n\nconst Calendar = () => {\n  const [events, setEvents] = useState([]);\n\n  // イベントをバックエンドから取得\n  useEffect(() => {\n    fetchEvents();\n  }, []);\n\n  const frtchEvents = async () => {\n    try {\n      const response = await axios.get('http://localhost:5001/api/events');\n      setEvents(response.data);\n    } catch (error) {\n      console.error('Error fetching events:', error);\n    }\n  };\n\n  // 日付クリック時の処理（予定を追加）\n  const handleDateClick = async (arg) => {\n    const eventTitle = prompt('予定を入力してください');\n    if (!eventTitle) return;\n\n    const newEvent = {\n      title: eventTitle,\n      start: arg.dateStr,\n      end: arg.dateStr,\n      description: '',\n      location: '',\n    };\n\n    try {\n      const response = await axios.post('http://localhost:5001/api/events', newEvent);\n      setEvents([...events, response.data]); // 追加されたイベントを反映\n    } catch (error) {\n      console.error('Error adding event:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>My Calendar</h2>\n      <FullCalendar \n        plugins={[dayGridPlugin, interactionPlugin]}\n        initialView=\"dayGridMonth\"\n        events={events}\n        dateClick={handleDateClick}\n      />\n    </div>\n  );\n};\n\nexport default Calendar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,iBAAiB,MAAM,2BAA2B;AACzD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACAC,SAAS,CAAC,MAAM;IACdW,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,kCAAkC,CAAC;MACpEJ,SAAS,CAACG,QAAQ,CAACE,IAAI,CAAC;IAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;;EAED;EACA,MAAME,eAAe,GAAG,MAAOC,GAAG,IAAK;IACrC,MAAMC,UAAU,GAAGC,MAAM,CAAC,aAAa,CAAC;IACxC,IAAI,CAACD,UAAU,EAAE;IAEjB,MAAME,QAAQ,GAAG;MACfC,KAAK,EAAEH,UAAU;MACjBI,KAAK,EAAEL,GAAG,CAACM,OAAO;MAClBC,GAAG,EAAEP,GAAG,CAACM,OAAO;MAChBE,WAAW,EAAE,EAAE;MACfC,QAAQ,EAAE;IACZ,CAAC;IAED,IAAI;MACF,MAAMf,QAAQ,GAAG,MAAMT,KAAK,CAACyB,IAAI,CAAC,kCAAkC,EAAEP,QAAQ,CAAC;MAC/EZ,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAEI,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C;EACF,CAAC;EAED,oBACEV,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MAAAwB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpB5B,OAAA,CAACL,YAAY;MACXkC,OAAO,EAAE,CAACjC,aAAa,EAAEC,iBAAiB,CAAE;MAC5CiC,WAAW,EAAC,cAAc;MAC1B3B,MAAM,EAAEA,MAAO;MACf4B,SAAS,EAAEnB;IAAgB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAjDID,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AAmDd,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}