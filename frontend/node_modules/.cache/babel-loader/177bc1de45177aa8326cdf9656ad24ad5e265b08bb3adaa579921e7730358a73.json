{"ast":null,"code":"var _jsxFileName = \"/Users/yoshidaren/Desktop/work/calendar_app/frontend/src/components/Calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport axios from 'axios';\nimport EventFormModal from './EventFormModal';\nimport Modal from './Modal';\nimport { deleteEvent } from '../api';\nimport '../styles/Calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false); // モーダルの開閉状態\n  const [selectedEvent, setSelectedEvent] = useState(null); // クリックされた予定の詳細\n  const [formModalOpen, setFormModalOpen] = useState(false);\n  const [isEditMode, setIsEditMode] = useState(false);\n\n  // イベントをバックエンドから取得\n  useEffect(() => {\n    fetchEvents();\n  }, []);\n  const fetchEvents = async () => {\n    try {\n      const response = await axios.get('http://localhost:5003/api/events');\n      setEvents(response.data);\n    } catch (error) {\n      console.error('Error fetching events:', error);\n    }\n  };\n  const openFormModal = () => {\n    setIsEditMode(false);\n    setSelectedEvent(null);\n    setFormModalOpen(true);\n  };\n  const closeFormModal = () => {\n    setFormModalOpen(false);\n    setIsEditMode(false);\n  };\n  const handleEventUpdate = async updatedEvent => {\n    try {\n      await axios.put(`http://localhost:5003/api/events/${updatedEvent._id}`, updatedEvent);\n      setEvents(prevEvents => prevEvents.map(event => event._id === updatedEvent._id ? {\n        ...event,\n        ...updatedEvent\n      } : event));\n      setFormModalOpen(false);\n    } catch (error) {\n      console.error('Error updating event:', error);\n    }\n  };\n\n  // 予定がクリックされたときに詳細を取得してモーダルを開く\n  const handleEventClick = clickInfo => {\n    const eventDetails = {\n      _id: clickInfo.event._def.extendedProps._id,\n      title: clickInfo.event.title,\n      start: clickInfo.event.start,\n      end: clickInfo.event.end,\n      description: clickInfo.event.extendedProps.description || \"\",\n      location: clickInfo.event.extendedProps.location || \"\",\n      reminderTime: clickInfo.event.extendedProps.reminderTime || 0\n    };\n    console.log('Event details for modal:', eventDetails); // モーダルに渡す前に確認\n\n    setSelectedEvent(eventDetails); // eventDetails を setSelectedEvent にセット\n    setModalOpen(true); // モーダルを開く\n  };\n  const handleEditEvent = eventDetails => {\n    setIsEditMode(true);\n    setSelectedEvent(eventDetails);\n    setModalOpen(false);\n    setFormModalOpen(true);\n  };\n\n  // イベントの削除処理\n  const handleEventDelete = async () => {\n    if (!selectedEvent || !selectedEvent._id) {\n      console.error('Event details are missing or incomplete');\n      return;\n    }\n    try {\n      await deleteEvent(selectedEvent._id);\n      console.log('✅ Event deleted:', selectedEvent._id);\n\n      // 🔹 MongoDB のデータ削除が完了してからイベントリストを更新\n      setEvents(prevEvents => prevEvents.filter(event => event._id !== selectedEvent._id));\n      setModalOpen(false); // モーダルを閉じる\n    } catch (error) {\n      console.error('❌ Error deleting event:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-event-button\",\n      onClick: openFormModal,\n      children: \"\\u4E88\\u5B9A\\u3092\\u8FFD\\u52A0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin, interactionPlugin],\n      initialView: \"dayGridMonth\",\n      events: events,\n      eventClick: handleEventClick,\n      eventContent: eventInfo => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fc-event-title\",\n        children: eventInfo.event.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }, this), formModalOpen && /*#__PURE__*/_jsxDEV(EventFormModal, {\n      onClose: closeFormModal,\n      fetchEvents: fetchEvents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 23\n    }, this), formModalOpen && /*#__PURE__*/_jsxDEV(EventFormModal, {\n      onClose: closeFormModal,\n      fetchEvents: fetchEvents,\n      eventDetails: selectedEvent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), modalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalOpen,\n      eventDetails: selectedEvent,\n      onClose: () => setModalOpen(false),\n      onDelete: handleEventDelete,\n      onEdit: handleEditEvent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 3\n  }, this);\n};\n_s(Calendar, \"IvrwVPN2t1oyxPp3LhxLoUwxREc=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","useEffect","FullCalendar","dayGridPlugin","interactionPlugin","axios","EventFormModal","Modal","deleteEvent","jsxDEV","_jsxDEV","Calendar","_s","events","setEvents","modalOpen","setModalOpen","selectedEvent","setSelectedEvent","formModalOpen","setFormModalOpen","isEditMode","setIsEditMode","fetchEvents","response","get","data","error","console","openFormModal","closeFormModal","handleEventUpdate","updatedEvent","put","_id","prevEvents","map","event","handleEventClick","clickInfo","eventDetails","_def","extendedProps","title","start","end","description","location","reminderTime","log","handleEditEvent","handleEventDelete","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","plugins","initialView","eventClick","eventContent","eventInfo","onClose","isOpen","onDelete","onEdit","_c","$RefreshReg$"],"sources":["/Users/yoshidaren/Desktop/work/calendar_app/frontend/src/components/Calendar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport axios from 'axios';\nimport EventFormModal from './EventFormModal';\nimport Modal from './Modal'\nimport { deleteEvent } from '../api';\nimport '../styles/Calendar.css';\n\n\nconst Calendar = () => {\n  const [events, setEvents] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false); // モーダルの開閉状態\n  const [selectedEvent, setSelectedEvent] = useState(null); // クリックされた予定の詳細\n  const [formModalOpen, setFormModalOpen] = useState(false);\n  const [isEditMode, setIsEditMode] = useState(false);\n\n  // イベントをバックエンドから取得\n  useEffect(() => {\n    fetchEvents();\n  }, []);\n\n  const fetchEvents = async () => {\n    try {\n      const response = await axios.get('http://localhost:5003/api/events');\n\n      setEvents(response.data);\n    } catch (error) {\n      console.error('Error fetching events:', error);\n    }\n  };\n\n  const openFormModal = () => {\n    setIsEditMode(false);\n    setSelectedEvent(null);\n    setFormModalOpen(true);\n  };\n\n  const closeFormModal = () => {\n    setFormModalOpen(false);\n    setIsEditMode(false);\n  };\n\n  const handleEventUpdate = async (updatedEvent) => {\n    try {\n        await axios.put(`http://localhost:5003/api/events/${updatedEvent._id}`, updatedEvent);\n        setEvents(prevEvents =>\n            prevEvents.map(event =>\n                event._id === updatedEvent._id ? { ...event, ...updatedEvent } : event\n            )\n        );\n        setFormModalOpen(false);\n    } catch (error) {\n        console.error('Error updating event:', error);\n    }\n  };\n\n\n  // 予定がクリックされたときに詳細を取得してモーダルを開く\n  const handleEventClick = (clickInfo) => {\n    const eventDetails = {\n      _id: clickInfo.event._def.extendedProps._id,\n      title: clickInfo.event.title,\n      start: clickInfo.event.start,\n      end: clickInfo.event.end,\n      description: clickInfo.event.extendedProps.description || \"\",\n      location: clickInfo.event.extendedProps.location || \"\",\n      reminderTime: clickInfo.event.extendedProps.reminderTime || 0\n    };\n\n    console.log('Event details for modal:', eventDetails); // モーダルに渡す前に確認\n\n    setSelectedEvent(eventDetails);  // eventDetails を setSelectedEvent にセット\n    setModalOpen(true);  // モーダルを開く\n  };\n\n  const handleEditEvent = (eventDetails) => {\n    setIsEditMode(true);\n    setSelectedEvent(eventDetails);\n    setModalOpen(false);\n    setFormModalOpen(true);\n  };\n\n  // イベントの削除処理\n  const handleEventDelete = async () => {\n    if (!selectedEvent || !selectedEvent._id) {\n      console.error('Event details are missing or incomplete');\n      return;\n    }\n\n    try {\n      await deleteEvent(selectedEvent._id);\n      console.log('✅ Event deleted:', selectedEvent._id);\n\n      // 🔹 MongoDB のデータ削除が完了してからイベントリストを更新\n      setEvents(prevEvents => prevEvents.filter(event => event._id !== selectedEvent._id));\n\n      setModalOpen(false); // モーダルを閉じる\n    } catch (error) {\n      console.error('❌ Error deleting event:', error);\n    }\n};\n\nreturn (\n  <div className=\"calendar-container\">\n    <h2>My Calendar</h2>\n\n    {/* 予定を追加ボタン */}\n    <button className=\"add-event-button\" onClick={openFormModal}>予定を追加</button>\n\n    <FullCalendar \n      plugins={[dayGridPlugin, interactionPlugin]}\n      initialView=\"dayGridMonth\"\n      events={events}\n      eventClick={handleEventClick}\n      eventContent={(eventInfo) => (\n        <div className=\"fc-event-title\">\n          {eventInfo.event.title}\n        </div>\n      )}\n    />\n\n    {/* 予定追加モーダル */}\n    {formModalOpen && <EventFormModal onClose={closeFormModal} fetchEvents={fetchEvents} />}\n\n    {formModalOpen && (\n      <EventFormModal\n        onClose={closeFormModal}\n        fetchEvents={fetchEvents}\n        eventDetails={selectedEvent}\n      />\n     )}\n\n    {/* 予定詳細モーダル */}\n    {modalOpen && (\n      <Modal \n        isOpen={modalOpen}\n        eventDetails={selectedEvent}\n        onClose={() => setModalOpen(false)}\n        onDelete={handleEventDelete}\n        onEdit={handleEditEvent}\n      />\n    )}\n  </div>\n);\n};\n\nexport default Calendar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,iBAAiB,MAAM,2BAA2B;AACzD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,WAAW,QAAQ,QAAQ;AACpC,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGhC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACnD,MAAM,CAACiB,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACmB,aAAa,EAAEC,gBAAgB,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACqB,UAAU,EAAEC,aAAa,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;;EAEnD;EACAC,SAAS,CAAC,MAAM;IACdsB,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAG,CAAC,kCAAkC,CAAC;MAEpEX,SAAS,CAACU,QAAQ,CAACE,IAAI,CAAC;IAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,MAAME,aAAa,GAAGA,CAAA,KAAM;IAC1BP,aAAa,CAAC,KAAK,CAAC;IACpBJ,gBAAgB,CAAC,IAAI,CAAC;IACtBE,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,MAAMU,cAAc,GAAGA,CAAA,KAAM;IAC3BV,gBAAgB,CAAC,KAAK,CAAC;IACvBE,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,MAAMS,iBAAiB,GAAG,MAAOC,YAAY,IAAK;IAChD,IAAI;MACA,MAAM3B,KAAK,CAAC4B,GAAG,CAAC,oCAAoCD,YAAY,CAACE,GAAG,EAAE,EAAEF,YAAY,CAAC;MACrFlB,SAAS,CAACqB,UAAU,IAChBA,UAAU,CAACC,GAAG,CAACC,KAAK,IAChBA,KAAK,CAACH,GAAG,KAAKF,YAAY,CAACE,GAAG,GAAG;QAAE,GAAGG,KAAK;QAAE,GAAGL;MAAa,CAAC,GAAGK,KACrE,CACJ,CAAC;MACDjB,gBAAgB,CAAC,KAAK,CAAC;IAC3B,CAAC,CAAC,OAAOO,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IACjD;EACF,CAAC;;EAGD;EACA,MAAMW,gBAAgB,GAAIC,SAAS,IAAK;IACtC,MAAMC,YAAY,GAAG;MACnBN,GAAG,EAAEK,SAAS,CAACF,KAAK,CAACI,IAAI,CAACC,aAAa,CAACR,GAAG;MAC3CS,KAAK,EAAEJ,SAAS,CAACF,KAAK,CAACM,KAAK;MAC5BC,KAAK,EAAEL,SAAS,CAACF,KAAK,CAACO,KAAK;MAC5BC,GAAG,EAAEN,SAAS,CAACF,KAAK,CAACQ,GAAG;MACxBC,WAAW,EAAEP,SAAS,CAACF,KAAK,CAACK,aAAa,CAACI,WAAW,IAAI,EAAE;MAC5DC,QAAQ,EAAER,SAAS,CAACF,KAAK,CAACK,aAAa,CAACK,QAAQ,IAAI,EAAE;MACtDC,YAAY,EAAET,SAAS,CAACF,KAAK,CAACK,aAAa,CAACM,YAAY,IAAI;IAC9D,CAAC;IAEDpB,OAAO,CAACqB,GAAG,CAAC,0BAA0B,EAAET,YAAY,CAAC,CAAC,CAAC;;IAEvDtB,gBAAgB,CAACsB,YAAY,CAAC,CAAC,CAAE;IACjCxB,YAAY,CAAC,IAAI,CAAC,CAAC,CAAE;EACvB,CAAC;EAED,MAAMkC,eAAe,GAAIV,YAAY,IAAK;IACxClB,aAAa,CAAC,IAAI,CAAC;IACnBJ,gBAAgB,CAACsB,YAAY,CAAC;IAC9BxB,YAAY,CAAC,KAAK,CAAC;IACnBI,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;;EAED;EACA,MAAM+B,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI,CAAClC,aAAa,IAAI,CAACA,aAAa,CAACiB,GAAG,EAAE;MACxCN,OAAO,CAACD,KAAK,CAAC,yCAAyC,CAAC;MACxD;IACF;IAEA,IAAI;MACF,MAAMnB,WAAW,CAACS,aAAa,CAACiB,GAAG,CAAC;MACpCN,OAAO,CAACqB,GAAG,CAAC,kBAAkB,EAAEhC,aAAa,CAACiB,GAAG,CAAC;;MAElD;MACApB,SAAS,CAACqB,UAAU,IAAIA,UAAU,CAACiB,MAAM,CAACf,KAAK,IAAIA,KAAK,CAACH,GAAG,KAAKjB,aAAa,CAACiB,GAAG,CAAC,CAAC;MAEpFlB,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACJ,CAAC;EAED,oBACEjB,OAAA;IAAK2C,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjC5C,OAAA;MAAA4C,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGpBhD,OAAA;MAAQ2C,SAAS,EAAC,kBAAkB;MAACM,OAAO,EAAE9B,aAAc;MAAAyB,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAE3EhD,OAAA,CAACR,YAAY;MACX0D,OAAO,EAAE,CAACzD,aAAa,EAAEC,iBAAiB,CAAE;MAC5CyD,WAAW,EAAC,cAAc;MAC1BhD,MAAM,EAAEA,MAAO;MACfiD,UAAU,EAAExB,gBAAiB;MAC7ByB,YAAY,EAAGC,SAAS,iBACtBtD,OAAA;QAAK2C,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAC5BU,SAAS,CAAC3B,KAAK,CAACM;MAAK;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB;IACL;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAGDvC,aAAa,iBAAIT,OAAA,CAACJ,cAAc;MAAC2D,OAAO,EAAEnC,cAAe;MAACP,WAAW,EAAEA;IAAY;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAEtFvC,aAAa,iBACZT,OAAA,CAACJ,cAAc;MACb2D,OAAO,EAAEnC,cAAe;MACxBP,WAAW,EAAEA,WAAY;MACzBiB,YAAY,EAAEvB;IAAc;MAAAsC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CACD,EAGD3C,SAAS,iBACRL,OAAA,CAACH,KAAK;MACJ2D,MAAM,EAAEnD,SAAU;MAClByB,YAAY,EAAEvB,aAAc;MAC5BgD,OAAO,EAAEA,CAAA,KAAMjD,YAAY,CAAC,KAAK,CAAE;MACnCmD,QAAQ,EAAEhB,iBAAkB;MAC5BiB,MAAM,EAAElB;IAAgB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAER,CAAC;AAAC9C,EAAA,CAvIID,QAAQ;AAAA0D,EAAA,GAAR1D,QAAQ;AAyId,eAAeA,QAAQ;AAAC,IAAA0D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}